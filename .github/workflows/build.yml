name: Iridium Build And Package

on:
  workflow_dispatch:
    inputs:
      iridium_version:
        description: 'Version du build'
        required: true
        default: 'v0.0.1'
      rclone_cpp_version:
        description: 'Version de rclone_cpp'
        required: true
        default: 'v0.6.1'

jobs:
  linux-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        working-directory: ${{ github.workspace }}
        run: |
          sudo apt-get update &&\
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y --no-install-recommends tzdata &&\
          sudo apt-get install -y python3 python3-venv python3-pip libclang-13-dev libclang-cpp13-dev llvm-13-dev libxcb-xkb-dev libxkbcommon-dev libvulkan-dev libgl-dev libopengl-dev libgl1-mesa-dev libglu1-mesa-dev libboost-all-dev libcurlpp-dev libzip-dev rpm cmake ruby ruby-dev build-essential &&\
          sudo gem install --no-document fpm &&\
          sudo -v ; curl https://rclone.org/install.sh | sudo bash &&\
          python3 -m venv ./venv &&\
          ./venv/bin/pip install conan &&\
          ./venv/bin/conan profile detect &&\
          git clone https://github.com/Sudo-Rahman/rclone_cpp.git &&\
          mkdir qt

      - name: Build Qt 6.7.0
        working-directory: ${{ github.workspace }}/qt
        run: |
          curl -o qt-everywhere-src-6.7.0.tar.xz https://mirror.netcologne.de/qtproject/archive/qt/6.7/6.7.0/single/qt-everywhere-src-6.7.0.tar.xz &&\
          mkdir src &&\
          tar -xf qt-everywhere-src-6.7.0.tar.xz -C src &&\
          mkdir build &&\
          cd build &&\
          ../src/qt-everywhere-src-6.7.0/configure -prefix ${{ github.workspace }}/qt/build -opensource -confirm-license -release -nomake examples -nomake tests &&\
          cmake --build . --parallel

      - name: Build rclone_cpp
        working-directory: ${{ github.workspace }}/rclone_cpp
        run: |
          git checkout ${{ github.event.inputs.rclone_cpp_version }} &&\
          ../venv/bin/conan install . --build=missing &&\
          ../venv/bin/conan create . --build=missing

      - name: Build Iridium
        working-directory: ${{ github.workspace }}
        run: |
          ./venv/bin/conan install . --build=missing &&\
          cmake --preset conan-release -DCMAKE_PREFIX_PATH="${{ github.workspace }}/qt/build"  &&\
          cmake --build --parallel --preset conan-release

      - name: Package
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p package &&\
          fpm -s dir -t deb -n iridium -v ${{ github.event.inputs.iridium_version }} -p package/iridium-${{ github.event.inputs.iridium_version }}.deb --prefix /usr/local -C build .

      - name: Caching package
        uses: actions/upload-artifact@v2
        with:
          name: iridium-linux-package
          path: package/*.deb
          retention-days: 1

#  windows-build:
#    runs-on: windows-latest
#    steps:
#      - name: Todo
#        run: echo "TODO"
#
#  macos-build:
#    runs-on: macos-latest
#    steps:
#      - name: Todo
#        run: echo "TODO"

  tag:
#    needs: [ linux-build, windows-build, macos-build ]
    needs: linux-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Retrieve cached linux package
        uses: actions/download-artifact@v2
        with:
          name: iridium-linux-package
          path: package/linux/

      - name: Push tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          tag_prefix: ""
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.iridium_version }}

      - name: Creating pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.iridium_version }}
          name: ${{ github.event.inputs.iridium_version }}
          draft: false
          prerelease: true
          files: package/linux/*
          token: ${{ secrets.GITHUB_TOKEN }}